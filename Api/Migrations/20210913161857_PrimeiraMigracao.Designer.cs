// <auto-generated />
using System;
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20210913161857_PrimeiraMigracao")]
    partial class PrimeiraMigracao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Exterior")
                        .HasColumnType("bit");

                    b.Property<bool?>("Interior")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            Interior = true,
                            Nome = "Plantas"
                        },
                        new
                        {
                            CategoriaId = 2,
                            Exterior = true,
                            Nome = "Plantas"
                        });
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Encomenda", b =>
                {
                    b.Property<int>("EncomendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEncomenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("int");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("EncomendaId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Encomendas");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Fatura", b =>
                {
                    b.Property<int>("FaturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EncomendaId")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizadorId")
                        .HasColumnType("int");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("FaturaId");

                    b.HasIndex("EncomendaId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCientífico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeComum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            ProdutoId = 1,
                            CategoriaId = 2,
                            Descricao = "Planta herbácea perene, originária da América do Sul mas que atualmente é subespontânea no nosso território. Quando cultivada como ornamental e em condições ideais, a Verbena bonariensis pode crescer até 1 metro de altura. As suas atrativas flores preenchem os canteiros de coloração roxa durante o verão e parte do Outono.",
                            Foto = "",
                            NomeCientífico = "Verbena bonariensis",
                            NomeComum = "Verbena",
                            Preco = 12f
                        });
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Utilizador", b =>
                {
                    b.Property<int>("UtilizadorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Andar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Contribuinte")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegisto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UtilizadorId");

                    b.ToTable("Utilizadores");

                    b.HasData(
                        new
                        {
                            UtilizadorId = 1,
                            Andar = "2º esq",
                            CodigoPostal = "2800-000",
                            Contribuinte = 123456789,
                            DataNascimento = new DateTime(1986, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRegisto = new DateTime(2021, 9, 13, 17, 18, 57, 215, DateTimeKind.Local).AddTicks(9177),
                            Email = "amanda@gmail.com",
                            Localidade = "Lisboa",
                            Morada = "Rua da Judiaria",
                            Nome = "Amanda Nunes",
                            Numero = 21,
                            Password = "123@123",
                            Telefone = "212212212"
                        });
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Encomenda", b =>
                {
                    b.HasOne("Projeto_CLOUD_45_2021.Produto", "Produto")
                        .WithMany("Encomendas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_CLOUD_45_2021.Utilizador", "Utilizador")
                        .WithMany("Encomendas")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Fatura", b =>
                {
                    b.HasOne("Projeto_CLOUD_45_2021.Encomenda", "Encomenda")
                        .WithMany("Faturas")
                        .HasForeignKey("EncomendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_CLOUD_45_2021.Utilizador", null)
                        .WithMany("Faturas")
                        .HasForeignKey("UtilizadorId");

                    b.Navigation("Encomenda");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Produto", b =>
                {
                    b.HasOne("Projeto_CLOUD_45_2021.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Encomenda", b =>
                {
                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Produto", b =>
                {
                    b.Navigation("Encomendas");
                });

            modelBuilder.Entity("Projeto_CLOUD_45_2021.Utilizador", b =>
                {
                    b.Navigation("Encomendas");

                    b.Navigation("Faturas");
                });
#pragma warning restore 612, 618
        }
    }
}
